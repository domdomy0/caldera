# UUID: f6a7b8c9-d0e1-4f2a-8b3c-4d5e6f7a8b93
id: f6a7b8c9-d0e1-4f2a-8b3c-4d5e6f7a8b93
name: Get Network Configuration (PowerShell JSON)
description: Gathers detailed network interface configuration using PowerShell and outputs as JSON.
tactic: discovery
technique_id: T1016 # System Network Configuration Discovery
privilege: User
platforms:
  windows:
    psh:
      command: |
        Get-NetIPConfiguration | Where-Object {$_.IPv4Address -ne $null -and $_.NetAdapter.Status -eq 'Up'} | ForEach-Object {
            $dnsServers = ($_ | Get-DnsClientServerAddress -AddressFamily IPv4 -ErrorAction SilentlyContinue).ServerAddresses
            $_ | Select-Object InterfaceAlias, InterfaceDescription, NetAdapterID,
                               @{Name="IPv4Address"; Expression={$_.IPv4Address.IPAddress}},
                               @{Name="SubnetMask"; Expression={$_.IPv4Address.SubnetMask}},
                               @{Name="DefaultGateway"; Expression={($_.IPv4DefaultGateway | Select-Object -ExpandProperty NextHop -ErrorAction SilentlyContinue) -join ','}},
                               @{Name="DNSServers"; Expression={$dnsServers -join ','}},
                               @{Name="MACAddress"; Expression={($_.NetAdapter | Get-NetAdapter -ErrorAction SilentlyContinue).MacAddress}},
                               @{Name="DHCPEnabled"; Expression={($_.NetAdapter | Get-DhcpClient -ErrorAction SilentlyContinue).DhcpEnabled}}
        } | ConvertTo-Json -Compress
      parsers:
        plugins.stockpile.app.parsers.json:
          - source: host.ip.address
            edge: HasIP
            json_key: "[0].IPv4Address" # Parses IPv4 of the first adapter found
          - source: host.mac.address
            edge: HasMAC
            json_key: "[0].MACAddress"
          - source: host.default.gateway
            edge: HasGateway
            json_key: "[0].DefaultGateway"
          - source: host.dns.serverlist_str
            edge: UsesDNSServers
            json_key: "[0].DNSServers"
